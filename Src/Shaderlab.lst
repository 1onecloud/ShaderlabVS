/*
=============================================================================
NFSA Summary for input file <Shaderlab.lex>
=============================================================================
Total NFSA states = 8516
Number of Start Conditions = 2
Start condition INITIAL:
  number of patterns = 21, number of nfsa states = 8833, accept states = 21
Start condition COMMENT:
  number of patterns = 3, number of nfsa states = 19, accept states = 3
=============================================================================
GPLEX: NFSA built.   25 msec
=============================================================================
GPLEX: DFSA built. 4180 msec
=============================================================================
GPLEX: DFSA minimized.  111 msec
=============================================================================
GPLEX: Shortest strings found.    8 msec
=============================================================================
DFSA Summary
=============================================================================
Number of dfsa instances = 2
Start condition INITIAL:
  number of dfsa states = 4050, number of accept states = 401
Start condition COMMENT:
  number of dfsa states = 5, number of accept states = 5
=============================================================================
GPLEX: C# file emitted.   79 msec
=============================================================================
GPLEX Summary
=============================================================================
Total number of states = 2259, total accept states = 120, backup states = 86
Automaton will cater for left-anchored patterns
Original state number was 4056, minimized machine has 2259 states
Compression summary: used 55,014 nextstate entries, plus 126 map entries
- Uncompressed automaton would have -1,778,188,288 nextstate entries
- Input characters are packed into 91 equivalence classes
- CharClass compression 99.99%, 91 entries Vs 1,114,112
- Nextstate table compression 73.24%, 55,014 entries Vs 205,569
- CharacterMap compression is 99.99%, 126 entries Vs 1,114,112
- Decision tree depth is 1

Backup state report --- 
In <0>, after "^\t" automaton could accept "{white_space}" in state 1
--- after ''\n'' automaton is in a non-accept state and might need to backup

In <0>, after "/" automaton could accept "." in state 2
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "0" automaton could accept "{digit}+" in state 4
--- after ''x'' automaton is in a non-accept state and might need to backup

In <0>, after "x" automaton could accept "." in state 5
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^A" automaton could accept "." in state 6
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "9" automaton could accept "{digit}+" in state 7
--- after ''.'' automaton is in a non-accept state and might need to backup

In <0>, after "^E" automaton could accept "." in state 8
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "+" automaton could accept "." in state 9
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "." automaton could accept "." in state 10
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "^F" automaton could accept "." in state 11
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "\"" automaton could accept "." in state 12
--- after ''\n'' automaton is in a non-accept state and might need to backup

In <0>, after "&" automaton could accept "." in state 13
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "|" automaton could accept "." in state 14
--- after ''|'' automaton is in a non-accept state and might need to backup

In <0>, after "*" automaton could accept "." in state 15
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after ";" automaton could accept "." in state 16
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "^B" automaton could accept "." in state 17
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "l" automaton could accept "." in state 18
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "e" automaton could accept "." in state 19
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "n" automaton could accept "." in state 20
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "d" automaton could accept "." in state 21
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^S" automaton could accept "." in state 22
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "t" automaton could accept "." in state 23
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "a" automaton could accept "." in state 24
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "r" automaton could accept "." in state 25
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "f" automaton could accept "." in state 26
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^c" automaton could accept "." in state 27
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "s" automaton could accept "." in state 28
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "m" automaton could accept "." in state 29
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "p" automaton could accept "." in state 30
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "i" automaton could accept "." in state 31
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^D" automaton could accept "." in state 32
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^V" automaton could accept "." in state 33
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^G" automaton could accept "." in state 34
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^P" automaton could accept "." in state 35
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^R" automaton could accept "." in state 36
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^T" automaton could accept "." in state 37
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^C" automaton could accept "." in state 38
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^U" automaton could accept "." in state 39
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^M" automaton could accept "." in state 40
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after ":" automaton could accept "." in state 41
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "^L" automaton could accept "." in state 42
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^O" automaton could accept "." in state 43
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^N" automaton could accept "." in state 44
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^W" automaton could accept "." in state 45
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "I" automaton could accept "." in state 46
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^Z" automaton could accept "." in state 47
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^#" automaton could accept "." in state 48
--- after ''p'' automaton is in a non-accept state and might need to backup

In <0>, after "^Add" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 51
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "x0Texture1D" automaton could accept "{alpha}+{digit}+{keyword}" in state 55
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "x0Texture2D" automaton could accept "{alpha}+{digit}+{keyword}" in state 57
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "x0in" automaton could accept "{alpha}+{digit}+{keyword}" in state 58
--- after ''l'' automaton is in a non-accept state and might need to backup

In <0>, after "x0technique" automaton could accept "{alpha}+{digit}+{keyword}" in state 59
--- after ''1'' automaton is in a non-accept state and might need to backup

In <0>, after "x0Sampler" automaton could accept "{alpha}+{digit}+{keyword}" in state 60
--- after ''S'' automaton is in a non-accept state and might need to backup

In <0>, after "x0Stateblock" automaton could accept "{alpha}+{digit}+{keyword}" in state 61
--- after ''S'' automaton is in a non-accept state and might need to backup

In <0>, after "^One" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 63
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^LogicalOr" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 64
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^LogicalCopy" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 65
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^Color" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 70
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^Vertex" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 71
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^VertexLM" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 72
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "^Sub" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 73
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "E00" automaton could accept "{exponent}?{digit}+" in state 75
--- after ''B'' automaton is in a non-accept state and might need to backup

In <0>, after "^Bind" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 76
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "/do\x20" automaton could accept "({white_space}|{blank}|{symbol}){keyword}{blank}*({white_space}|{symbol})" in state 82
--- after ''|'' automaton is in a non-accept state and might need to backup

In <0>, after "/Buffer\x20" automaton could accept "({white_space}|{blank}|{symbol}){keyword}{blank}*({white_space}|{symbol})" in state 86
--- after ''|'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tOne" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 87
--- after ''M'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tLogicalOr" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 88
--- after ''R'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tLogicalCopy" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 89
--- after ''I'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tColor" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 90
--- after ''M'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tRange" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 91
--- after ''('' automaton is in a non-accept state and might need to backup

In <0>, after "^\tVertex" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 92
--- after ''S'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tVertexLM" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 93
--- after ''R'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tSub" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 94
--- after ''S'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tBind" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 95
--- after ''C'' automaton is in a non-accept state and might need to backup

In <0>, after "^\tBlend" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 96
--- after ''S'' automaton is in a non-accept state and might need to backup

In <0>, after "^\t\tColor" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 97
--- after ''M'' automaton is in a non-accept state and might need to backup

In <0>, after "^\t\tVertex" automaton could accept "^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;)" in state 98
--- after ''L'' automaton is in a non-accept state and might need to backup

In <0>, after ".2" automaton could accept "{float1}" in state 101
--- after ''D'' automaton is in a non-accept state and might need to backup

In <0>, after "\t" automaton could accept "{white_space}" in state 108
--- after ''A'' automaton is in a non-accept state and might need to backup

In <0>, after "A" automaton could accept "." in state 109
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "E" automaton could accept "." in state 110
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "c" automaton could accept "." in state 111
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "D" automaton could accept "." in state 112
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "G" automaton could accept "." in state 113
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "P" automaton could accept "." in state 114
--- after ''0'' automaton is in a non-accept state and might need to backup

In <0>, after "U" automaton could accept "." in state 115
--- after ''0'' automaton is in a non-accept state and might need to backup

=============================================================================
 */

// ==========================================================================
//  GPLEX error listing for lex source file <Shaderlab.lex>
// ==========================================================================
//  Version:  1.2.2
//  Machine:  ROCKYWM
//  DateTime: 2014/8/27 18:23:02
//  UserName: v-rockyl
// ==========================================================================


%namespace ShaderlabVS.Lexer
%option verbose, summary, noparser, nofiles, unicode

/**********************************************************************************/
/********************************User Defined Code*********************************/
/**********************************************************************************/

%{
     public int NextToken() { return yylex(); }
     public int GetPos() { return yypos; }
     public int GetLength() { return yyleng; }
%}

/********************************Rules Section*********************************/

%x COMMENT
digit               [0-9]
alpha               [a-zA-Z_]
exponent            [Ee]("+"|"-")?{digit}+
floatsuffix         [fFhH]
hexdigit            [0-9a-fA-F]
float1				("+"|"-")?{digit}*"."{digit}+{floatsuffix}?
float2				("+"|"-")?{digit}+"."{digit}+{floatsuffix}?
numbers				(("+"|"-")?{digit}+|{float1}|{float2})

symbol			("+="|"-="|"*="|"/="|"%="|"&&"|"||"|"<="|">="|"=="|"!="|";"|","|"="|"."|"&"|"!"|"-"|"+"|"*"|"/"|"%"|"<"|">"|";"|"{"|"}"|","|"("|")"|"["|"]")


CmntStart			\/\*
CmntEnd				\*\/
words				[^\*\n]*
blank				" "
white_space         [ \t\v\n\f\r]


keyword				BlendState|break|Buffer|cbuffer|class|compile|const|continue|DepthStencilState|DepthStencilView|discard|do|else|extern|false|for|GeometryShader|if|in|inline|inout|interface|namespace|linear|centroid|nointerpolation|noperspective|sample|out|pass|PixelShader|precise|RasterizerState|RenderTargetView|return|register|Sampler|Sampler1D|Sampler2D|Sampler3D|SamplerCUBE|SamplerState|SamplerComparisonState|shared|Stateblock|StateblockState|static|struct|switch|tbuffer|technique|technique10|technique11|texture|Texture1D|Texture1DArray|Texture2D|Texture2DArray|Texture2DMS|Texture2DMSArray|Texture3D|TextureCube|TextureCubeArray|true|typedef|uniform|VertexShader|void|volatile|while
keywordsSpeical     ALPHATOCOVERAGEENABLE|BLENDENABLE|SRCBLEND|DESTBLEND|BLENDOP|SRCBLENDALPHA|DESTBLENDALPHA|BLENDOPALPHA|RENDERTARGETWRITEMASK|DEPTHENABLE|DEPTHWRITEMASK|DEPTHFUNC|STENCILENABLE|STENCILREADMASK|STENCILWRITEMASK|FRONTFACESTENCILFAIL|FRONTFACESTENCILZFAIL|FRONTFACESTENCILPASS|FRONTFACESTENCILFUNC|BACKFACESTENCILFAIL|BACKFACESTENCILZFAIL|BACKFACESTENCILPASS|BACKFACESTENCILFUNC|FILLMODE|CULLMODE|FRONTCOUNTERCLOCKWISE|DEPTHBIAS|DEPTHBIASCLAMP|SLOPESCALEDDEPTHBIAS|ZCLIPENABLE|SCISSORENABLE|MULTISAMPLEENABLE|ANTIALIASEDLINEENABLE|FILTER|ADDRESSU|ADDRESSV|ADDRESSW|MIPLODBIAS|MAXANISOTROPY|COMPARISONFUNC|BORDERCOLOR|MINLOD|MAXLOD|BINORMAL|BINORMAL0|BINORMAL1|BINORMAL10|BINORMAL11|BINORMAL2|BINORMAL3|BINORMAL4|BINORMAL5|BINORMAL6|BINORMAL7|BINORMAL8|BINORMAL9|BLENDINDICES|BLENDINDICES0|BLENDINDICES1|BLENDINDICES10|BLENDINDICES11|BLENDINDICES2|BLENDINDICES3|BLENDINDICES4|BLENDINDICES5|BLENDINDICES6|BLENDINDICES7|BLENDINDICES8|BLENDINDICES9|BLENDWEIGHTS|BLENDWEIGHTS0|BLENDWEIGHTS1|BLENDWEIGHTS10|BLENDWEIGHTS11|BLENDWEIGHTS2|BLENDWEIGHTS3|BLENDWEIGHTS4|BLENDWEIGHTS5|BLENDWEIGHTS6|BLENDWEIGHTS7|BLENDWEIGHTS8|BLENDWEIGHTS9|COLOR|COLOR0|COLOR1|COLOR10|COLOR11|COLOR12|COLOR13|COLOR14|COLOR15|COLOR2|COLOR3|COLOR4|COLOR5|COLOR6|COLOR7|COLOR8|COLOR9|DIFFUSE|DIFFUSE0|DIFFUSE1|DIFFUSE10|DIFFUSE11|DIFFUSE2|DIFFUSE3|DIFFUSE4|DIFFUSE5|DIFFUSE6|DIFFUSE7|DIFFUSE8|DIFFUSE9|FOG|NORMAL|NORMAL0|NORMAL1|NORMAL10|NORMAL11|NORMAL2|NORMAL3|NORMAL4|NORMAL5|NORMAL6|NORMAL7|NORMAL8|NORMAL9|POSITION|POSITION0|POSITION1|POSITION10|POSITION11|POSITION2|POSITION3|POSITION4|POSITION5|POSITION6|POSITION7|POSITION8|POSITION9|PSIZE|PSIZE0|PSIZE1|PSIZE10|PSIZE11|PSIZE2|PSIZE3|PSIZE4|PSIZE5|PSIZE6|PSIZE7|PSIZE8|PSIZE9|SPECULAR|SPECULAR0|SPECULAR1|SPECULAR10|SPECULAR11|SPECULAR2|SPECULAR3|SPECULAR4|SPECULAR5|SPECULAR6|SPECULAR7|SPECULAR8|SPECULAR9|SV_CLIPDISTANCE|SV_CLIPDISTANCE1|SV_CLIPDISTANCE10|SV_CLIPDISTANCE11|SV_CLIPDISTANCE2|SV_CLIPDISTANCE3|SV_CLIPDISTANCE4|SV_CLIPDISTANCE5|SV_CLIPDISTANCE6|SV_CLIPDISTANCE7|SV_CLIPDISTANCE8|SV_CLIPDISTANCE9|SV_COVERAGE|SV_CULLDISTANCE|SV_CULLDISTANCE1|SV_CULLDISTANCE10|SV_CULLDISTANCE11|SV_CULLDISTANCE2|SV_CULLDISTANCE3|SV_CULLDISTANCE4|SV_CULLDISTANCE5|SV_CULLDISTANCE6|SV_CULLDISTANCE7|SV_CULLDISTANCE8|SV_CULLDISTANCE9|SV_DEPTH|SV_DISPATCHTHREADID|SV_DOMAINLOCATION|SV_GROUPID|SV_GROUPINDEX|SV_GROUPTHREADID|SV_GSINSTANCEID|SV_INSIDETESSFACTOR|SV_INSTANCEID|SV_ISFRONTFACE|SV_OUTPUTCONTROLPOINTID|SV_POSITION|SV_PRIMITIVEID|SV_RENDERTARGETARRAYINDEX|SV_SAMPLEINDEX|SV_TARGET0|SV_TARGET1|SV_TARGET2|SV_TARGET3|SV_TARGET4|SV_TARGET5|SV_TARGET6|SV_TARGET7|SV_TESSFACTOR|SV_VERTEXID|SV_VIEWPORTARRAYINDEX|TANGENT|TANGENT0|TANGENT1|TANGENT10|TANGENT11|TANGENT2|TANGENT3|TANGENT4|TANGENT5|TANGENT6|TANGENT7|TANGENT8|TANGENT9|TESSFACTOR|TESSFACTOR0|TESSFACTOR1|TESSFACTOR10|TESSFACTOR11|TESSFACTOR2|TESSFACTOR3|TESSFACTOR4|TESSFACTOR5|TESSFACTOR6|TESSFACTOR7|TESSFACTOR8|TESSFACTOR9|TEXCOORD|TEXCOORD0|TEXCOORD1|TEXCOORD10|TEXCOORD11|TEXCOORD12|TEXCOORD13|TEXCOORD14|TEXCOORD15|TEXCOORD19|TEXCOORD2|TEXCOORD3|TEXCOORD4|TEXCOORD5|TEXCOORD6|TEXCOORD7|TEXCOORD8|TEXCOORD9|VFACE|VPOS|REGISTER
datatype			AppendStructuredBuffer|bool|bool2|bool3|bool4|Buffer|ByteAddressBuffer|ConsumeStructuredBuffer|double|double2|double3|double4|float|float1x1|float1x2|float1x3|float1x4|float2|float2x1|float2x2|float2x3|float2x4|float3|float3x1|float3x2|float3x3|float3x4|float4|float4x1|float4x2|float4x3|float4x4|half|half2|half3|half4|InputPatch|int|int2|int3|int4|line|lineadj|LineStream|matrix|OutputPatch|point|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture1D|RWTexture1DArray|RWTexture2D|RWTexture2DArray|RWTexture3D|string|StructuredBuffer|tex2D|Texture1D|Texture1DArray|Texture2D|Texture2DArray|Texture2DMS|Texture2DMSArray|Texture3D|triangle|triangleadj|TriangleStream|uint|uint2|uint3|uint4|vector|sampler|sampler2D|sampler3D|samplerCUBE
function		    abs|acos|all|AllMemoryBarrier|AllMemoryBarrierWithGroupSync|any|asdouble|asfloat|asin|asint|asuint|atan|atan2|ceil|clamp|clip|cos|cosh|countbits|cross|D3DCOLORtoUBYTE4|ddx|ddx_coarse|ddx_fine|ddy|ddy_coarse|ddy_fine|degrees|determinant|DeviceMemoryBarrier|DeviceMemoryBarrierWithGroupSync|distance|dot|dst|EvaluateAttributeAtCentroid|EvaluateAttributeAtSample|EvaluateAttributeSnapped|exp|exp2|f16tof32|f32tof16|faceforward|firstbithigh|firstbitlow|floor|fmod|frac|frexp|fwidth|GetRenderTargetSampleCount|GetRenderTargetSamplePosition|GroupMemoryBarrier|GroupMemoryBarrierWithGroupSync|InterlockedAdd|InterlockedAnd|InterlockedCompareExchange|InterlockedCompareStore|InterlockedExchange|InterlockedMax|InterlockedMin|InterlockedOr|InterlockedXor|isfinite|isinf|isnan|ldexp|length|lerp|lit|log|log10|log2|mad|max|min|modf|mul|noise|normalize|pow|Process2DQuadTessFactorsAvg|Process2DQuadTessFactorsMax|Process2DQuadTessFactorsMin|ProcessIsolineTessFactors|ProcessQuadTessFactorsAvg|ProcessQuadTessFactorsMax|ProcessQuadTessFactorsMin|ProcessTriTessFactorsAvg|ProcessTriTessFactorsMax|ProcessTriTessFactorsMin|radians|rcp|reflect|refract|reversebits|round|rsqrt|saturate|sign|sin|sincos|sinh|smoothstep|sqrt|step|tan|tanh|tex1D|tex1Dbias|tex1Dgrad|tex1Dlod|tex1Dproj|tex2D|tex2Dbias|tex2Dgrad|tex2Dlod|tex2Dproj|tex3D|tex3Dbias|tex3Dgrad|tex3Dlod|tex3Dproj|texCUBE|texCUBEbias|texCUBEgrad|texCUBElod|texCUBEproj|transpose|trunc

unityDataType				Rect|Color|2D|Rect|Cube|Float|Range{blank}*\({blank}*{numbers}{blank}*,{blank}*{numbers}{blank}*\)|Vector
unityKeywordsWithPara		#pragma
unityBlockKeywords			CGPROGRAM|ENDCG|Shader|SubShader|FallBack|Properties|Pass|UsePass|Tags|BindChannels|Stencil|Material
unityNonBlockKeywords		LOD|Lighting|SetTexture|Cull|Fog|ZWrite|ZTest|AlphaTest|Blend|Color|ColorMask|Offset|SeparateSpecular|ColorMaterial|Diffuse|Ambient|Shininess|Specular|Emission|[Cc]ombine|Mode|Density|Range|Greater|GEqual|Less|LEqual|Equal|NotEqual|Always|Never|Add|Sub|RevSub|Min|Max|LogicalClear|LogicalSet|LogicalCopy|LogicalCopyInverted|LogicalNoop|LogicalInvert|LogicalAnd|LogicalNand|LogicalOr|LogicalNor|LogicalXor|LogicalEquiv|LogicalAndReverse|LogicalAndInverted|LogicalOrReverse|LogicalOrInverted|One|Zero|SrcColor|SrcAlpha|DstColor|DstAlpha|OneMinusSrcColor|OneMinusSrcAlpha|OneMinusDstColor|OneMinusDstAlpha|LightMode|Always|ForwardBase|ForwardAdd|PrepassBase|PrepassFinal|Vertex|VertexLMRGBM|VertexLM|ShadowCaster|ShadowCollector|RequireOptions|SoftVegetation|Name|Bind|Ref|ReadMask|WriteMask|Comp|Fail|ZFail|DOUBLE
unityFunction				UnpackNormal
%%

/*********Comments********/
/*************************/

"//"(.)*                    {return (int)ShaderlabToken.COMMENT_LINE;}

{CmntStart}{words}\**{CmntEnd} { return (int)ShaderlabToken.COMMENT;}
{CmntStart}{words}\**          { BEGIN(COMMENT); return (int)ShaderlabToken.COMMENT;}
<COMMENT>\n                     |                                
<COMMENT>{words}\**            { return (int)ShaderlabToken.COMMENT;}
<COMMENT>{words}\**{CmntEnd}   { BEGIN(INITIAL); return (int)ShaderlabToken.COMMENT;}

/**********Numbers********/
/*************************/

"0x"{hexdigit}+                {return (int)ShaderlabToken.NUMBER;}
{digit}+					   {return (int)ShaderlabToken.NUMBER;}
{exponent}?{digit}+			   {return (int)ShaderlabToken.NUMBER;}
{float1}					   {return (int)ShaderlabToken.FLOAT;}
//^^^^^^
// Warning: This pattern always overrides "{float2}" 
// --------------------------------------------------
{float2}					   {return (int)ShaderlabToken.FLOAT;}
//^^^^^^
// Warning: This pattern always overridden by "{float1}" 
// ------------------------------------------------------

/**********String**********/
/*************************/

\"(\\.|[^\\"])*\"            {return (int)ShaderlabToken.STRING_LITERAL;}


/**********White Space && Unrecognized********/
/*********************************************/
{white_space}                    {/* Ignore */}
.                    {return (int)ShaderlabToken.UNDEFINED;}

/**********Keywords**********/
/***************************/
({white_space}|{blank}|{symbol}){keyword}{blank}*({white_space}|{symbol})	{return (int)ShaderlabToken.KEYWORD;}
:({blank})*{keywordsSpeical}({white_space}|;) {return (int)ShaderlabToken.KEYWORDSPECIAL;}

{alpha}+{digit}+{keyword}			{return (int)ShaderlabToken.TEXT;}

^{white_space}*{blank}*{unityBlockKeywords}{blank}*({white_space}|\{) {return (int)ShaderlabToken.UNITYBLOCKKEYWORD;}

^{white_space}*{blank}*{unityNonBlockKeywords}{blank}*({white_space}*|\{|\,|\;) {return (int)ShaderlabToken.UNITYNONBLOCKKEYWORD;}

^{white_space}*{blank}*{unityKeywordsWithPara}{blank}*{white_space}+{words} {return (int)ShaderlabToken.UNITYNONBLOCKKEYWORD;}

/**********Date Type**********/
/*****************************/
({white_space}|{blank}|{symbol}){datatype}({white_space}+|\()  {return (int)ShaderlabToken.DATATYPE;}
({white_space}|{blank}|{symbol}){unityDataType}({white_space}+|\(|\))  {return (int)ShaderlabToken.DATATYPE;}

/**********Function**********/
/*****************************/

{function}{blank}*\(    {return (int)ShaderlabToken.FUNCTION;}
{unityFunction}{blank}*\(    {return (int)ShaderlabToken.UNITYFUNCTION;}

%%// ==========================================================================

